name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npx tsc --noEmit

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: type-check

    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run build

  upload-swagger:
    name: Upload Swagger Spec
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Upload swagger.yaml
        uses: actions/upload-artifact@v4
        with:
          name: swagger-spec
          path: docs/swagger.yaml

  deploy:
    name: Docker Deploy
    runs-on: ubuntu-latest
    needs: upload-swagger

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Create .env file from GitHub secrets
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> .env

      - name: Build Docker image with injected .env args (optional)
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/currency-api:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/currency-api:latest
